public class Start {
    public static void main(String[] args) {
        City A = new City("A");
        City B = new City("B");
        City C = new City("C");
        City D = new City("D");
        City E = new City("E");
        City F = new City("F");

        A.addPath(D, 6);
        A.addPath(B, 5);
        A.addPath(F, 1);

        B.addPath(A, 5);
        B.addPath(C, 3);

        C.addPath(B, 3);
        C.addPath(B, 4);

        D.addPath(A, 6);
        D.addPath(C, 4);
        D.addPath(E, 2);

        E.addPath(F, 2);

        F.addPath(E, 2);
        F.addPath(B, 1);

        System.out.println(B.travel(1));
        System.out.println(B.travel(2));
        System.out.println(B.travel(3));
    }
}

public class Path {
    private City city;
    private int cost;

    public Path(City city, int coast) {
        this.city = city;
        this.cost = coast;
    }

    public City getCity(){
        return city;
    }

    public int getCost(){
        return cost;
    }

    public String toString() {
        return String.format("%s : %d", city.getName(), cost);
    }

}

import java.util.ArrayList;
import java.util.List;

public class City {
    private String name;
    private List<Path> paths;


    public City(String cityName) {
        this.name = cityName;
        this.paths = new ArrayList<>();
    }

    public City(String cityName, List<Path> paths) {
        this.name = cityName;
        this.paths = paths;
    }

    public String getName() {
        return name;
    }

    public void addPath(City city, int cost) {
        this.paths.add(new Path(city, cost));
    }

    public void addPath(Path path) {
        this.paths.add(path);
    }

    public List<Path> getPaths() {
        return paths;
    }

    public City travel(int n) {
        City currentCity = this;
        for (int i = 0; i < n; i++) {
            if (currentCity.paths.isEmpty()) {
                return null; // No further paths available
            }
            currentCity = currentCity.paths.getFirst().getCity();
        }
        return currentCity;
    }

    @Override
    public String toString() {
        return "City{" +
                "name='" + name + '\'' +
                ", paths=" + paths +
                '}';
    }
}
Задание 5.13. Кредитные карты.

В данном ДЗ необходимо выполнить практическое задания в рамках парадигмы ООП.

Ожидаемый результат приложить скрин только части результата выполнения программы в командной строке. Запуск выполнять используя предварительно собранный вами jar-архив.

ВНИМАНИЕ! Высылать необходимо только часть результата выполнения в командной строке, где в имени пути обязательно должно быть название папки с вашим именем на латинице.

1. Создайте класс AccountNumberGenerator. Этот класс содержит

статичную приватную переменную типа int, с начальным значением 0;
открытый статичный метод getNext() – который увеличивает значение статичной переменной на 1 и возвращает ее новое значение;
открытый статичный метод getCurrent(), который возвращает значение статичной переменной;
открытый метод reset(), устанавливающий значение переменной в 0;
Этот класс нужно использовать для генерации номеров счетов.

2. Создайте класс Currency – валюта. Валюта может быть USD (доллар США), EUR (евро), JOY (Йена), TRY(Лира), AED (Дирхам), RUB (Рубль). Можете добавить еще валют.

3. Класс Account сделайте абстрактным. Добавьте следующие элементы

 Поля

приватное поле, содержащее комиссию за обслуживание.
приватное поле, содержащее валюту счета. конструкторы
конструктор, принимающий 3 параметра – номер счета, остаток на счете, размер комиссии за обслуживание счета (валюта – рубль)
конструктор, принимающий 4 параметра – номер счета, остаток на счете, размер комиссии за обслуживание счета, валюта;
Методы

гетер и сеттер комиссии за обслуживание
гетер и сеттер валюты (сеттер, помимо установки валюты, пересчитывает комиссию и остаток на счете)
метод, вычитающий комиссию из остатка
метод списывания суммы со счета (принимает параметр – списываемая сумма)
метод пополнения счета (принимает параметр – сумма, на которую увеличивается остаток)
Удалите метод

изменения значения остатка средств на счете (сеттер)
4. Создайте класс DebitAccount, дебетовой карты. Этот класс расширяет (наследует) класс Account.

Этот класс не добавляет свои методы и поля, и не переопределяет методы и поля суперкласса. Класс определяет аналогичные суперклассу конструкторы, в которых просто вызывает соответствующий конструктор суперкласса.

5. Создайте класс CreditAccount, кредитной карты. Этот класс расширяет (наследует) класс Account. Добавьте следующие элементы

Поля

приватное поле – процентная ставка (годовая, в процентах)
приватное поле – лимит по кредитной карте
приватное поле – начисленные проценты
приватное поле – начисленные комиссионные 
Конструкторы

аналогичные суперклассу конструкторы, в которых просто вызывает соответствующий конструктор суперкласса, остальные переменные = 0;
конструктор, принимающий параметры номер счета, остаток на счете, размер комиссии за обслуживание счета, валюта, процентная ставка, лимит по карте (в заданной валюте), начисленные проценты и комиссионные = 0;
Методы

гетеры и сеттеры процентной ставки и лимита по карте.
гетеры для начисленных процентов и комиссионных за обслуживание.
метод начисления процентов (если остаток меньше лимита по карте  увеличивается сумма начисленных процентов на величину = «(лимит -остаток)  (процентная ставка  число дней в текущем году)  100». 
Переопределить методы

метод, вычитающий комиссию из остатка – вместо уменьшения остатка на величину комиссии, метод должен увеличить «начисленные комиссионные» на величину комиссионных.
метод пополнения счета – вместо просто увеличения остатка, средства сначала идут на погашения начисленных комиссионных, затем начисленных процентов, затем на пополнение остатка.
